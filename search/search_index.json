{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome, new trainee!","text":"<p>This is a documentation to learn the basics as an FiSi trainee.</p>"},{"location":"#granularity","title":"Granularity","text":"<p>This documentation should just be a rough overview of the topics. It should not be too detailed, because you should learn to find information yourself. You should also learn to ask the right questions or Google the right keywords.</p> <p>Note</p> <p>All subjects in this docu are already covered somewhere in the internet. I dont wont to reinvent the wheel. I just want to give you a rough overview and some links to get started.</p>"},{"location":"#structure","title":"Structure","text":"<p>IoT</p> 1 Month<p>Get familiar with IoT Boards, like Arduino, Raspberry Pi, etc.</p> <p>Virtualization</p> 1 Month<p>Learn about some basic virtualization technologies, like VirtualBox, Docker, etc.</p> <p>Networking</p> 1 Month<p>Now you learn how to build your own simple network, and know how to use some basic network tools.</p> <p>Backup</p> 2 Weeks<p>Learn how to backup your data, and how to recover it.</p> <p>Security</p> 1 Month<p>Learn how to secure your network, and how to protect your data.</p> <p>Tools</p> 1 Month<p>Learn how to use some basic tools, like Ansible, etc.</p> <p>Applications</p> 2 Months<p>After you have your own network, you can now deploy some applications, like databases, nextcloud, etc.</p> <p>Note</p> <p>There are some further topics in the navigation bar, but they are not essential for the trainee project.</p> <pre><code>gitGraph TB:\n  commit id: \"Welcome\"\n  branch iot\n  checkout iot\n  commit id: \"Arduino\"\n  commit id: \"Raspberry Pi\"\n  commit id: \"ESP32\"\n  checkout main\n  merge iot tag: \"You are now a Microcontroller Master!\"\n  branch virtualization\n  checkout virtualization\n  commit id: \"VirtualBox\"\n  commit id: \"Proxmox\"\n  commit id: \"Docker\"\n  checkout main\n  merge virtualization tag: \"You are now able to virtualize stuff!\"\n  branch networking\n  checkout networking\n  commit id: \"Router\"</code></pre>"},{"location":"#main-topics","title":"Main topics","text":"<ul> <li>First, we will do a few projects with IoT Boards, like the Raspberry Pi, to get familiar with some basic hardware.</li> <li>After that, we will setup some virtual machines to a basic infrastructure.</li> <li>Then we will setup a network with a router and real switches.</li> <li>We will also setup some servers and services to get a infrastructure like a company would have (e.g. a webserver, a mailserver, a fileserver, ...)</li> <li>Lastly, you can choose some other topics like coding or AI. These are not essential for the trainee project, but you can learn a lot from them.</li> </ul>"},{"location":"#prepare-yourself","title":"Prepare yourself","text":"<ul> <li>Get familiar with the Linux command line</li> </ul> <p>Some other useful tools (but not essential) are:</p> <ul> <li>jq</li> <li> <p>Built-in:</p> <ul> <li>grep</li> <li>sed</li> <li>awk</li> </ul> </li> </ul> Are you ready?Yes!No!Submit  Great!"},{"location":"#further-topics","title":"Further topics","text":""},{"location":"#training-framework-plan-ausbildungsrahmenplan","title":"Training Framework Plan (Ausbildungsrahmenplan)","text":"<p>Here is a list of all important topics, you should know at the end of your training.</p> Nr Richt Grob Fein 3.1 Informieren und Kommunizieren 3.1 e Daten und Sachverhalte visualisieren und Grafiken erstellen sowie Standardsoftware anwenden 3.3 Teamarbeit 4.2 Systemarchitektur, Hardware und Betriebssysteme 4.2 a Sys und Hardware Architekturen kennen. Speicher und Peripherie Kompatibilit\u00e4t 4.2 b BS Komponenten und deren Anwendungsbereiche 4.3 Anwendungssoftware 4.3 a-c Software kennen. HW + Systemvorraussetzungen beurteilen. Leistung + Erweiterung pr\u00fcfen 4.4 Netze, Dienste 4.4 a HW+SW zur Daten\u00fcbertragung unterscheiden 4.4 b Netzwerkarchitekturen unterscheiden 4.4 c Netzwerkbetriebssysteme (NOS) beurteilen. (diese Regeln zb die Druckerfreigaben. -&gt; zb Windows NT) 5.1 Ist-Analyse und Konzeption 5.1 a HW+SW f\u00fcr einen Arbeitsplatz ermitteln. Arbeitsablauf, Datenfl\u00fcsse und Schnittstellen analysieren. 5.1 c HW+SW Komponenten ausw\u00e4hlen und L\u00f6sungsvarianten entwickeln 5.1 d Datenmodelle entwerfen (UML???) 5.1 e DOKU 5.2 Programmiertechniken 5.2 a prozedurale vs objektorientiert unterscheiden 5.2 b Programmierlogik und Programmiermethoden anwenden 5.2 c Anwendung erstellen (klein) 5.3 Installieren und Konfigurieren 5.3 a Systeme zusammenstellen und verbinden 5.3 b HW und Betriebssysteme installieren und konfigurieren 5.3 c Standardsoftware (Office etc) installieren und konfigurieren 5.3 d Systeme testen 5.3 e Konfig-Files festhalten und Systemdokus erstellen 5.4 Datenschutz und Urheberrecht 5.4 a Verschl\u00fcsselungsverfahren und Zugriffsschutzmethoden anwenden 5.4 e Daten archivieren, nicht mehr ben\u00f6tigte Datenbest\u00e4nde l\u00f6schen, Datentr\u00e4ger entsorgen 5.5 Systempflege 5.5 a-c Datenbanken 5.5 e+f Backup + Wiederherstellung 6.1 Analyse und Design 6.1 a-e OOAD 6.2 Programmerstellung und -dokumentation 6.2 a Programmiersprache 6.2 b Dev-Environment 6.2 d Modulare Programmierung 6.2 f Konfigurationsmanagement 6.3 Schnittstellenkonzepte 6.3 a+b Schnittstellen (REST?) 6.4 Testverfahren 6.4 a-d Testing 7 Schulung 7 a-e Schulungsziele und -methoden festlegen. Schulungsveranstaltungen organisatorisch vorbereiten 8.1 Systemkonfiguration 8.1 a Rechner- und Systemarchitekturen sowie Betriebssysteme beurteilen und einordnen 8.1 b BS nach Vor und Nachteilen ausw\u00e4hlen 8.1 c BS Steuersprachen anwenden 8.1 d Speichermedien, Systemkomponenten und Einund Ausgabeger\u00e4te ausw\u00e4hlen 8.1 e Hardwarekomponenten hard- und softwareseitig einstellen 8.1 f Kompatibilit\u00e4t von Systemkomponenten beurteilen und Probleme l\u00f6sen 8.1 g HW + SW in bestehende Systeme integrieren 8.2 Netzwerke 8.2 a Vor und Nachteilen von: Netzwerk-Topologien, Protokollen und Schnittstellen 8.2 b Netzwerkbetriebssysteme installieren und konfigurieren 8.2 c \u00dcberg\u00e4nge zwischen Netzwerken 8.2 d Softwarearchtitekturen in Netze integrieren 8.3 Systeml\u00f6sungen 8.3 a-c SW + HW + Programme nach Kundenanforderungen ausw\u00e4hlen, installieren und konfigurieren 8.3 d Workflows erstellen 8.3 e Zugriffsrechte verwalten 8.3 g Leistungsf\u00e4higkeit von Systemen der Informationsund Telekommunikationstechnik ermitteln, beurteilen und optimieren 8.4 Einf\u00fchrung von Systemen 8.4 a Dokumentationen 8.4 b Systemeinf\u00fchrung planen und organisieren 8.4 c Daten\u00fcbernahmen planen und durchf\u00fchren 8.4 e Systemkomponenten aus integrierten Systemen entfernen 9.1 Benutzerunterst\u00fctzung 9.1 a Anwendungsm\u00f6glichkeiten, Leistungsspektrum und Bedienung komplexer Systeme vor Benutzern pr\u00e4sentieren 9.1 b Bedienungsunterlagen und Hilfe-Programme zur Benutzerunterst\u00fctzung bereitstellen sowie Systeme zur interaktiven Benutzerunterst\u00fctzung einrichten 9.1 c Benutzerprobleme analysieren und l\u00f6sen 9.2 Fehleranalyse + St\u00f6rungsbeseitigung 9.2 a Fehler systematisch l\u00f6sen 9.2 b Datenrettung 9.2 c Fehlervermeidungsma\u00dfnahmen planen 9.3 Systemunterst\u00fctzung 9.3 a Nutzungsrichtlinien erstellen. F\u00fcr: Lizenzen, Zugriffsberechtigungen, Archivierung + Backup, Notfallma\u00dfnahmen 9.3 b HW + SW etc beschaffen 9.3 c Systemkapazit\u00e4ten planen 9.3 d Pflege und Verwaltung von Datenbest\u00e4nden 9.3 e Zugangsvoraussetzungen f\u00fcr die Nutzung externer Datenbanken und Informations- und Telekommunikationssysteme herstellen 10.1 Produkte, Prozesse und Verfahren 10.1 a-b f\u00fcr das Einsatzgebiet typischen Produkte, Prozesse und Verfahren im Hinblick auf die Anforderungen an komplexe Systeml\u00f6sungen analysieren und in ein L\u00f6sungskonzept umsetzen 10.1 d vorhandene Systeml\u00f6sungen im Einsatzgebiet erfassen und nach Ma\u00dfgabe ihrer Leistungsf\u00e4higkeit, Funktionalit\u00e4t, Wirtschaftlichkeit und Erweiterbarkeit bewerten 10.2 Projektplanung 10.2 a Projektplanung: Personalplanung, Sachmittelplanung, Terminplanung und Kostenplanung 10.2 b Systemkonzeptionen und Projektplanungswerkzeuge anwenden 10.3 Projektdurchf\u00fchrung 10.3 a-c Projekte mit Kunden, internen Stellen und externen Dienstleistern 10.3 d-e Abnahmeprotokolle 10.4 Projektkontroller + Qualit\u00e4tsmanagenet 10.4 a Soll-Ist-Vergleich 10.4 b Qualit\u00e4tsmanagement 10.4 c Testl\u00e4ufe 10.4 d Kunde bei St\u00f6rungen informieren 10.4 e Leistungen abrechnen, Nachkalkulation durchf\u00fchren, abrechnungsrelevante Daten dokumentieren"},{"location":"10_iot/","title":"IoT","text":""},{"location":"10_iot/#dashboard","title":"Dashboard","text":"<p>ThingsBoard</p>"},{"location":"10_iot/#self-check","title":"Self Check","text":"<p>Self Check</p> <p>Before you go on, make sure you have completed the following tasks:</p> <ul> <li> Traffic light with a Arduino.</li> <li> Automated plant watering system with a Arduino.</li> <li> RetroPie with a Raspberry Pi.</li> <li> Alexa with a Raspberry Pi.</li> <li> Basic 3D print with a 3D printer.<ul> <li> Design with Tinkercad / Download from Thingiverse.</li> <li> Print with Cura.</li> </ul> </li> <li> Basic Python programming.<ul> <li> Hangman game.</li> </ul> </li> </ul>"},{"location":"10_iot/esp32/","title":"ESP32","text":"<p>An ESP32 is a microcontroller with integrated WiFi and Bluetooth. It is a very cheap and powerful microcontroller. It is very easy to program and can be used for many different projects.</p>"},{"location":"10_iot/3dprinting/","title":"3D","text":""},{"location":"10_iot/3dprinting/#design","title":"Design","text":"<p>Tinkercad is a free, easy-to-use app for 3D design.</p>"},{"location":"10_iot/3dprinting/#hub","title":"Hub","text":"<p>Thingiverse is a design community for discovering, making, and sharing 3D printable things.</p>"},{"location":"10_iot/3dprinting/#print","title":"Print","text":"<p>Cura is a free slicer for 3D printing.</p>"},{"location":"10_iot/arduino/","title":"Arduino","text":""},{"location":"10_iot/arduino/#what-is-arduino","title":"What is Arduino?","text":"<p>Arduino is an microcontroller platform that is used to build electronic devices. It is a very popular platform for hobbyists and students. It's like a mini computer, without a screen or keyboard. It has a lot of inputs and outputs, so you can connect it to sensors and actuators.</p> <p>Info</p> <p>It can only run one program at a time. It is not a general purpose computer.</p>"},{"location":"10_iot/arduino/#arduino-ide","title":"Arduino IDE","text":""},{"location":"10_iot/arduino/#getting-started","title":"Getting started","text":"<p>You should already got an Arduino Mega 2560 from your instructor. If not, ask him.</p> <p>There should also be a book with some starter projects. It contains a lot of simple projects to get familiar with the Arduino.</p> <p>Otherwise you can find a pdf version of the book here.</p> <p>Please do at least these projects:</p> <ul> <li>Blink</li> <li>DigitalReadSerial</li> <li>Traffic Light</li> </ul>"},{"location":"10_iot/arduino/projects/","title":"Projects","text":"<p>This section should provide a list of projects that can be done with the Arduino.</p>"},{"location":"10_iot/arduino/projects/#kresse-auf-dem-mars","title":"Kresse auf dem Mars","text":"<p>https://robot-workshop.de/kressebot-bewaesserungsanlage/</p> <p>OR</p> <p>https://circuitdigest.com/microcontroller-projects/automatic-irrigation-system-using-arduino-uno</p> <p>OR</p> <p>See Raspi Projects for a similar project with a camera and time-lapse.</p>"},{"location":"10_iot/arduino/projects/#obstacle-avoiding-car","title":"Obstacle Avoiding Car","text":""},{"location":"10_iot/arduino/projects/#infinity-cube","title":"Infinity Cube","text":""},{"location":"10_iot/raspi/","title":"Raspberry Pi","text":"<p>A Raspberry Pi is a small computer. It is in between a microcontroller and a full computer. It is a very popular platform for hobbyists and students.</p> <p>Info</p> <p>In difference to the Arduino, it can run multiple programs at the same time.</p> <p>You can connect a monitor, keyboard and mouse to it, and use it like a normal computer.</p>"},{"location":"10_iot/raspi/projects/","title":"Projects","text":""},{"location":"10_iot/raspi/projects/#kresse-auf-dem-mars-with-camera-time-lapse","title":"Kresse auf dem Mars (with Camera Time Lapse)","text":"<p>https://www.raspberrypi.com/news/raspberry-pi-zero-waters-your-plants-and-records-growth-timelapse/</p> <p>OR</p> <p>See Arduino Projects for a similar project without the camera and no time-lapse.</p>"},{"location":"10_iot/raspi/projects/#retropie","title":"RetroPie","text":"<p>We would recommend to use the pre-made image, but if you want to install it manually, you can follow the instructions on the official website.</p> <p>Pre-made image</p> <p>Manuel install</p>"},{"location":"10_iot/raspi/projects/#smart-mirror","title":"Smart Mirror","text":"<p>A smart mirror is a two-way mirror with an electronic display behind the glass. The display can show the viewer different kinds of information in the form of widgets, such as weather, time, date, and news updates.</p> <p></p> <p>Tutorial</p>"},{"location":"10_iot/raspi/projects/#own-alexa","title":"Own Alexa","text":"<p>Tutorial</p>"},{"location":"10_iot/raspi/projects/#pet-plant","title":"Pet Plant","text":""},{"location":"10_iot/raspi/projects/#wordclock","title":"WordClock","text":"<p>Writeup</p> <p>Code</p>"},{"location":"10_iot/raspi/projects/#list-of-projects","title":"List of projects","text":"<p>Awesome Raspberry Pi</p>"},{"location":"20_virtualization/","title":"Virtualization","text":"<p>Virtualization is the process of creating a virtual version of something, including virtual computer hardware platforms, storage devices, and computer network resources.</p> <p>With virtualization, you can create multiple virtual machines (VMs) running different operating systems on a single physical machine. Each VM has its own virtual hardware, including CPUs, memory, hard drives, network interfaces, and other devices. This allows you to run multiple operating systems simultaneously on a single physical machine.</p> <p>It's also a great way to have a clean environment, where you can test your applications without having to worry about messing up your host system.</p>"},{"location":"20_virtualization/#virtualization-software","title":"Virtualization Software","text":"<p>There are many different virtualization software available, but we will focus on the following:</p> <ul> <li>VirtualBox</li> <li>Proxmox</li> <li>Docker</li> <li>Kubernetes (advanced)</li> </ul>"},{"location":"20_virtualization/#proceed","title":"Proceed","text":"<p>You should fist start with a basic VM software like VirtualBox. With this you can create a VM on your PC.</p> <p>After that you can proceed with Proxmox, which is a more advanced VM software. It allows you to create VMs on a server and manage them via a web interface. Therefor you need a extra hardware for the server, because Proxmox overwrites the whole hard drive.</p> <p>Docker uses a different approach for virtualization. It uses containers instead of VMs. This allows you to run multiple applications on a single host system. This is a more advanced topic, but is more and more used in the industry.</p> <p>Kubernetes is the big brother of docker. It is really complex. For this reason, its not necessary to learn it, but it is a good to know.</p>"},{"location":"20_virtualization/#prior-knowledge","title":"Prior Knowledge","text":"<p>Please read the prior knowledge before you start with the virtualization.</p>"},{"location":"20_virtualization/#self-check","title":"Self Check","text":"<p>Self Check</p> <p>Before you go on, make sure you have completed the following tasks:</p> <ul> <li> VirtualBox<ul> <li> Install VirtualBox</li> <li> Create a VM</li> <li> Install an OS on the VM (e.g. Ubuntu)</li> </ul> </li> <li> Proxmox<ul> <li> Install Proxmox on a ThinClient</li> <li> Create a VM</li> <li> Install an OS on the VM (e.g. Ubuntu)</li> </ul> </li> <li> Docker<ul> <li> Install Docker</li> <li> Run a container (e.g. an NgniX web server)</li> </ul> </li> </ul>"},{"location":"20_virtualization/1_virtualbox/","title":"VirtualBox","text":""},{"location":"20_virtualization/1_virtualbox/#background","title":"Background","text":""},{"location":"20_virtualization/1_virtualbox/#what-is-virtualization","title":"What is virtualization?","text":"<p>Virtualization is a technique to run multiple operating systems on one computer.</p>"},{"location":"20_virtualization/1_virtualbox/#why-virtualization","title":"Why virtualization?","text":"<p>Virtualization is used to separate different applications from each other. This is useful if you want to run multiple applications on one computer, but you don't want them to interfere with each other.</p>"},{"location":"20_virtualization/1_virtualbox/#what-is-a-vm","title":"What is a VM?","text":"<p>A VM is a virtual machine. It is a full virtualization of a computer. It has its own operating system and its own resources (e.g. CPU, RAM, ...).</p>"},{"location":"20_virtualization/1_virtualbox/#virtualbox_1","title":"VirtualBox","text":"<p>VirtualBox is a virtualization software. It gets installed on an operating system and provides a graphical user interface (GUI) to manage the virtual machines (VMs).</p> <p>Note</p> <p>VirtualBox is just a software that gets installed on an operating system, so you can use it in parallel to your operating system. (But you must share the resources of your computer between the operating system and VirtualBox.)</p>"},{"location":"20_virtualization/1_virtualbox/#install","title":"Install","text":"<p>Please follow the official installation guide</p> How much RAM can you give your VM, if you have 8 GB RAM on your computer?8 GB&lt; 8 GBSubmit  Great!   A VM can only use the resources that are available on the host system. So if you have 8GB RAM on your computer, you can't give 8 GB RAM to your VM."},{"location":"20_virtualization/2_proxmox/","title":"Proxmox","text":"<p>Now that we are familiar with the basics of virtualization, let's look at some of the popular virtualization platforms.</p> <p>Proxmox is a virtualization platform. It gets installed directly on the hardware and provides a web interface to manage the virtual machines (VMs) and containers (LXCs).</p> <p>Note</p> <p>Proxmox is a operating system, so you can't use it in parallel to another operating system. (But you can install Proxmox on a VM.)</p>"},{"location":"20_virtualization/2_proxmox/#install","title":"Install","text":"<p>Please follow the official installation guide.</p>"},{"location":"20_virtualization/3_docker/","title":"Docker","text":"<p>Docker is a tool to run applications in containers. A container is a lightweight virtual machine. It is a virtual machine because it is isolated from the host system. It is lightweight because it does not need a full operating system. Instead, it uses the host system's kernel. This makes it very fast and efficient. Docker is a tool to manage containers. It is also used by many developers to run their applications locally.</p> <p></p> <p>Warning</p> <p>The running containers are ephemeral. This means that all data in the container is lost when the container is stopped. To persist data, you can map a volume from the host to the container.</p>"},{"location":"20_virtualization/3_docker/#how-it-works","title":"How it works","text":"<p>The applications run in so-called <code>containers</code>. These containers be descendend from <code>images</code>. <code>Images</code> are the blueprints for <code>containers</code>. These images get generated from <code>Dockerfiles</code>, which are the blueprints for <code>images</code>. You can create your own <code>Dockerfiles</code> to create your own <code>images</code> to run your own <code>containers</code>.</p> <p>There are also pre-made <code>images</code> available on Docker Hub. These <code>images</code> are created by the community and can be used by everyone.</p> <p>When you run a <code>container</code> from a pre-made image, it will be downloaded from the <code>Registry</code> (e.g. Docker Hub) and run on your machine. The <code>Registry</code> is a place where <code>images</code> are stored. You can also create your own <code>Registry</code> to store your own <code>images</code> or upload your own <code>images</code> to Docker Hub.</p> <p>You can define multiple <code>containers</code> in a <code>docker-compose.yml</code> file. This way, you can run multiple <code>containers</code> at once. Then you can also create dependencies between the <code>containers</code>. For example, you can create a <code>container</code> for a database and a <code>container</code> for a web server. Then you create a dependency between them, so that the web server <code>container</code> will only start when the database <code>container</code> is running.</p> <pre><code>graph TD\n    A[Dockerfile] --&gt; B[Image]\n    B --&gt; C[Web Container]\n    D[Registry download] --&gt; E[Image]\n    E --&gt; F[DB Container]\n    C --&gt; G[Compose]\n    F --&gt; G\n    G --&gt; H[Web Container]\n    G --&gt; I[DB Container]\n    H o--o I\n    H --&gt; J[Port 80]\n    I --&gt; K[Port 3306]</code></pre>"},{"location":"20_virtualization/3_docker/#getting-started","title":"Getting Started","text":"<p>You can run Docker on your local machine (via Docker Desktop) or on a server (via CLI).</p> <p>You can find a tutorial on how to get started with Docker here.</p>"},{"location":"20_virtualization/3_docker/#docker-desktop","title":"Docker Desktop","text":"<p>Docker Desktop is the easiest way to get started with Docker. It is available for Windows and macOS. You can download it here.</p>"},{"location":"20_virtualization/3_docker/#cli","title":"CLI","text":"<p>If you want to run Docker on a server, you can use it via the CLI<sup>1</sup>. You can install it on Ubuntu with the following command:</p> <pre><code>sudo apt install docker.io\n</code></pre>"},{"location":"20_virtualization/3_docker/#host-to-container-mapping","title":"Host to Container mapping","text":"<p>When running a container, you can map ports and volumes from the host to the container.</p> <p>Its always in the format <code>&lt;host&gt;:&lt;container&gt;</code>. For example, if you want to map port 8080 on the host to port 80 in the container, you would use <code>8080:80</code>.</p>"},{"location":"20_virtualization/3_docker/#ports","title":"Ports","text":"<p>For example you want to run <code>docker run -p 8080:80 &lt;image&gt;</code>. This means that you want to run a container from the image <code>&lt;image&gt;</code> and map port 80 in the container to port 8080 on the host. This means that you can access the container via <code>localhost:8080</code>.</p> <p>That means you can run multiple containers (e.g. 4 web servers) on the same host, but map them to different ports (e.g. 8080, 8081, 8082, 8083). This way, you can access all of them via the different port (e.g. <code>localhost:8080</code>, <code>localhost:8081</code>, <code>localhost:8082</code>, <code>localhost:8083</code></p> <pre><code>docker run -p 8080:80 nginx\ndocker run -p 8081:80 nginx\ndocker run -p 8082:80 nginx\ndocker run -p 8083:80 nginx\n</code></pre>"},{"location":"20_virtualization/3_docker/#volumes","title":"Volumes","text":"<p>As you might know, containers are ephemeral. This means that all data in the container is lost when the container is stopped. To persist data, you can map a volume from the host to the container.</p> <p>You can also use this to inject data into the container. For example, you can map a volume from the host to the container and put a file in it. This way, the file will be available in the container.</p>"},{"location":"20_virtualization/3_docker/#example","title":"Example","text":"<pre><code>docker run -v /some/content:/usr/share/nginx/html -d nginx\n</code></pre> <p>In this example, the content of <code>/some/content</code> on the host will be available in the container at <code>/usr/share/nginx/html</code>.</p> <p>So when you create a file <code>/some/content/index.html</code> with the content <code>Hello World!</code>, you can access it in the container at <code>localhost:8080/index.html</code>.</p>"},{"location":"20_virtualization/3_docker/#dockerfile","title":"Dockerfile","text":"<pre><code>FROM ubuntu:latest\n</code></pre>"},{"location":"20_virtualization/3_docker/#docker-compose","title":"Docker Compose","text":"<p>Docker Compose is a tool to run multiple containers at once. You can define all containers in a <code>docker-compose.yml</code> file. You can find a tutorial on how to get started with Docker Compose here.</p>"},{"location":"20_virtualization/3_docker/#commands","title":"Commands","text":"<p>Some basic commands to get started with Docker:</p>"},{"location":"20_virtualization/3_docker/#container-infos","title":"Container Infos","text":"<pre><code>docker ps # List running containers\ndocker ps -a # List all containers (also stopped/failed ones)\ndocker logs &lt;container&gt; # Show logs of a container (useful for debugging)\n</code></pre>"},{"location":"20_virtualization/3_docker/#run","title":"Run","text":"<pre><code>docker run &lt;image&gt; # Run a container\ndocker run -it &lt;image&gt; # Run a container and open a shell\ndocker run -d &lt;image&gt; # Run a container in the background\ndocker run -p &lt;host-port&gt;:&lt;container-port&gt; &lt;image&gt; # Run a container and map a port\ndocker run -v &lt;host-path&gt;:&lt;container-path&gt; &lt;image&gt; # Run a container and map a volume\n</code></pre>"},{"location":"20_virtualization/3_docker/#stop","title":"Stop","text":"<pre><code>docker stop &lt;container&gt; # Stop a container\ndocker stop $(docker ps -a -q) # Stop all containers\n</code></pre>"},{"location":"20_virtualization/3_docker/#remove","title":"Remove","text":"<pre><code>docker rm &lt;container&gt; # Remove a container\ndocker rm $(docker ps -a -q) # Remove all containers\n</code></pre>"},{"location":"20_virtualization/3_docker/#prune","title":"Prune","text":"<p>Docker stores all images and containers on the host. This can take up a lot of space. To free up space, you can use the <code>prune</code> command.</p> <pre><code>docker system prune # Remove all stopped containers, all dangling images, and all unused networks\ndocker system prune -a # Remove all stopped containers, all unused images, and all unused networks\ndocker system prune -a --volumes # Remove all stopped containers, all unused images, all unused networks, and all unused volumes\n</code></pre>"},{"location":"20_virtualization/3_docker/#compose","title":"Compose","text":"<pre><code>docker-compose up # Run all containers defined in docker-compose.yml\ndocker-compose up -d # Run all containers defined in docker-compose.yml in the background\ndocker-compose down # Stop all containers defined in docker-compose.yml\ndocker-compose down -v # Stop all containers defined in docker-compose.yml and remove all volumes\n\ndocker-compose logs # Show logs of all containers defined in docker-compose.yml\ndocker-compose logs &lt;container&gt; # Show logs of a container defined in docker-compose.yml\ndocker-compose logs -f # Show logs of all containers defined in docker-compose.yml and follow the output\n</code></pre>"},{"location":"20_virtualization/3_docker/#networking","title":"Networking","text":"<p>Please watch the following video to learn more about Docker networking:</p> <p>Docker Networking</p>"},{"location":"20_virtualization/3_docker/#full-tutorial","title":"Full Tutorial","text":"<p>You can find a full tutorial on how to get started with Docker here.</p>"},{"location":"20_virtualization/3_docker/#it-lab-collection","title":"IT-Lab Collection","text":"<p>Refer to our Docker-Collection for a collection of Dockerfiles and docker-compose files.</p> <ol> <li> <p>CLI = Command Line Interface =&gt; Terminal\u00a0\u21a9</p> </li> </ol>"},{"location":"20_virtualization/4_kubernetes/","title":"Kubernetes","text":""},{"location":"20_virtualization/4_kubernetes/#overview","title":"Overview","text":"<p>Kubernetes is the big brother of docker. It is a container orchestration system for automating deployment, scaling and management of containerized applications.</p>"},{"location":"20_virtualization/4_kubernetes/#tutorial","title":"Tutorial","text":"<p>To get started with kubernetes, we have an seperate documentation</p>"},{"location":"20_virtualization/5_openstack/","title":"OpenStack","text":"<p>https://www.openstack.org/</p>"},{"location":"20_virtualization/prior_knowledge/","title":"Prior Knowledge for Virtualization","text":"<p>Before you start with virtualization, you should have some prior knowledge.</p> <p>This includes:</p> <ul> <li>Create and boot from a boot-stick</li> <li>Basic knowledge about SSH</li> </ul>"},{"location":"20_virtualization/prior_knowledge/boot_stick/","title":"Boot-Stick","text":"<p>You should know how to create a boot-stick.</p> <p>A boot-stick is a USB stick, from which you can start a computer. This is useful, if you want to install a new operating system on your computer.</p> <p>You need a USB-Stick, a operating system and a software to create the boot-stick.</p>"},{"location":"20_virtualization/prior_knowledge/boot_stick/#usb-stick","title":"USB-Stick","text":"<p>You can use any USB-Stick, but you should watch out for the size. The size of the USB-Stick should be at least the size of the iso file of the operating system.</p>"},{"location":"20_virtualization/prior_knowledge/boot_stick/#operating-system","title":"Operating System","text":"<p>You need a operating system, which you want to install on your computer. You can download the iso file from the website of the operating system.</p> <p>For example, if you want to install Ubuntu, you can download the iso file from the Ubuntu website.</p>"},{"location":"20_virtualization/prior_knowledge/boot_stick/#software-rufus","title":"Software (Rufus)","text":"<p>You need a software to create the boot-stick. There are many different software available, but we will focus on Rufus.</p>"},{"location":"20_virtualization/prior_knowledge/boot_stick/#create-boot-stick","title":"Create Boot-Stick","text":"<ol> <li>Download the iso file of the operating system</li> <li>Download Rufus</li> <li>Start Rufus</li> <li>Select the USB-Stick</li> <li>Select the iso file</li> <li>Start the process</li> </ol>"},{"location":"20_virtualization/prior_knowledge/boot_stick/#boot-from-usb-stick","title":"Boot from USB-Stick","text":"<p>After you created the boot-stick, you can boot from it. This is different for every computer (especially by the manufacturer). On most computers you can press <code>F12</code> during the boot process to select the boot device. On some computers you have to change the boot order in the BIOS.</p> <p>You can find the right key for your computer by searching for it on the internet.</p>"},{"location":"20_virtualization/prior_knowledge/boot_stick/#install-operating-system","title":"Install Operating System","text":"<p>After you booted from the boot-stick, you can install the operating system on your computer. This is different for every operating system you want to install. Most of the time you just have to follow the instructions on the screen.</p>"},{"location":"20_virtualization/prior_knowledge/ssh/","title":"SSH","text":"<p>What is SSH?</p> <p>SSH is a protocol to connect to a remote computer. It is used to connect to a server, for example to manage a web server or to connect to a Raspberry Pi.</p> <p>Info</p> <p>SSH is a protocol, not a program. There are multiple programs that implement the SSH protocol. The most popular one is OpenSSH.</p>"},{"location":"30_networking/","title":"Introduction to Networking","text":"<ul> <li>Starting Point: Setup your basic Network (Router, PC, VM)</li> </ul> <p>https://github.com/vasanthk/how-web-works</p>"},{"location":"30_networking/#self-check","title":"Self Check","text":"<p>Self Check</p> <p>Before you go on, make sure you have completed the following tasks:</p> <ul> <li> Ping your VM from your PC<ul> <li> Capture with Wireshark</li> </ul> </li> <li> Setup your own Network<ul> <li> Firewall (e.g. pfSense or SonicWall)</li> <li> Wifi (e.g. with FritzBox)</li> <li> Switch (e.g. with Cisco)</li> </ul> </li> <li> Create some Services<ul> <li> DNS</li> <li> DHCP</li> <li> Webserver</li> <li> VPN (e.g. WireGuard)</li> </ul> </li> </ul>"},{"location":"30_networking/firewall/","title":"Firewall","text":""},{"location":"30_networking/firewall/#pfsense","title":"pfSense","text":""},{"location":"30_networking/starting_point/","title":"Starting Point","text":""},{"location":"30_networking/starting_point/#requirements","title":"Requirements","text":"<ul> <li>Your pc</li> <li>A FritzBox router</li> </ul>"},{"location":"30_networking/starting_point/#fritzbox","title":"FritzBox","text":""},{"location":"30_networking/starting_point/#fritzbox_1","title":"FritzBox","text":""},{"location":"30_networking/switch/","title":"Switch","text":""},{"location":"30_networking/tools/","title":"Network Tools","text":"<p>There are many tools that can be used to debug networks. Here are some of them:</p> <ul> <li>ping</li> <li>traceroute</li> <li>nmap</li> <li>netcat</li> <li>nslookup</li> </ul>","tags":["CLI","Tools"]},{"location":"30_networking/tools/#ping","title":"ping","text":"<p><code>ping</code> is a tool to check if a host is reachable. It sends ICMP packets to the host and waits for a response. If the host is reachable, it will respond with an ICMP packet. If the host is not reachable, it will not respond.</p> <pre><code>ping &lt;host&gt;\n</code></pre>","tags":["CLI","Tools"]},{"location":"30_networking/tools/#traceroute","title":"traceroute","text":"<p><code>traceroute</code> is a tool to check the route to a host. It prints all the hops between you and the target.</p> <pre><code>traceroute &lt;host&gt;\n</code></pre>","tags":["CLI","Tools"]},{"location":"30_networking/tools/#nmap","title":"nmap","text":"<p><code>nmap</code> is a tool to scan a host for open ports. It can also be used to scan a whole network for open ports. Its a very powerful tool, which will also be used for hacking.</p> <p>You can find the download here.</p> <pre><code>nmap &lt;host&gt; # scan a host\nnmap -sS &lt;host&gt; # scan a host with TCP SYN scan\nnamp -Pn &lt;host&gt; # scan a host without ping\n</code></pre>","tags":["CLI","Tools"]},{"location":"30_networking/tools/#netcat","title":"netcat","text":"<p><code>netcat</code> is a tool to send and receive data over TCP and UDP. It can be used to debug network connections.</p> <pre><code>nc -l &lt;port&gt; # listen on a port\nnc &lt;host&gt; &lt;port&gt; # connect to a host on a port\n</code></pre>","tags":["CLI","Tools"]},{"location":"30_networking/tools/#nslookup","title":"nslookup","text":"<p><code>nslookup</code> is a tool to query DNS servers. It can be used to debug DNS.</p> <pre><code>nslookup &lt;host&gt; # query the DNS server for a host\nnslookup &lt;host&gt; &lt;dns-server&gt; # query a specific DNS server for a host\n</code></pre>","tags":["CLI","Tools"]},{"location":"30_networking/vlan/","title":"VLAN","text":""},{"location":"30_networking/wireshark/","title":"Wireshark","text":"<p>Wireshark is a network protocol analyzer. It lets you capture and interactively browse the traffic running on a computer network. It is the de facto (and often de jure) standard across many industries and educational institutions.</p> <p>You can use it, to analyze the network traffic of your applications. This is useful, if you want to know, what your application is doing in the background. For example, you can see, if your application is sending data to a server.</p> <p>Introduction to Wireshark</p>"},{"location":"30_networking/advanced/","title":"Advanced Networking","text":"<p>Here we will cover some more advanced networking topics like:</p> <ul> <li>VLANs</li> <li>Subnets</li> </ul>"},{"location":"30_networking/advanced/subnetting/","title":"Subnetting","text":""},{"location":"30_networking/advanced/vlan/","title":"VLAN","text":""},{"location":"30_networking/advanced/vlan/#what-is-a-vlan","title":"What is a VLAN?","text":"<p>A VLAN is a Virtual Local Area Network. It is a way to divide a network into multiple virtual networks. It is used to separate different types of traffic on a network. For example, you can use a VLAN to separate your voice traffic from your data traffic.</p>"},{"location":"30_networking/mininet/","title":"Mininet","text":"<p>We will use Mininet to emulate a network topology, so you can test your configuration before deploying it on real hardware.</p>"},{"location":"30_networking/mininet/routing/","title":"Mininet - Routing","text":""},{"location":"30_networking/services/","title":"Introduction","text":"<p>In this section, we will setup some basic services and learn how to connect to them.</p> <p>In advance a few words about how the internet works.</p>"},{"location":"30_networking/services/#sequence-of-events","title":"Sequence of events","text":"<p>How does a client connect to a server?</p>"},{"location":"30_networking/services/#client-wants-to-connect-to-wwwexamplecom","title":"Client wants to connect to <code>www.example.com</code>","text":"<ol> <li>Client asks DNS server for IP address of <code>www.example.com</code></li> <li>DNS server responds with IP address (e.g. <code>192.168.178.2</code>)</li> <li>Client connects to <code>192.168.178.2</code> on port 80 (HTTP)</li> </ol>"},{"location":"30_networking/services/#client-wants-to-connect-to-wwwexamplecom8080","title":"Client wants to connect to <code>www.example.com:8080</code>","text":"<ol> <li>Client asks DNS server for IP address of <code>www.example.com</code></li> <li>DNS server responds with IP address (e.g. <code>192.168.178.2</code>) Same as before</li> <li>Client connects to <code>192.168.178.2</code> on port 8080</li> </ol>"},{"location":"30_networking/services/#client-wants-to-connect-to-wwwexamplecom-via-smb-port-445","title":"Client wants to connect to <code>www.example.com</code> via <code>SMB</code> (port 445)","text":"<p>SMB: Protocol for file sharing</p> <ol> <li>Client asks DNS server for IP address of <code>example.com</code></li> <li>DNS server responds with IP address (e.g. <code>192.168.178.2</code>) Same as before (DNS does not care about ports)</li> <li>Client connects to <code>192.168.178.2</code> on port 445 (SMB)</li> </ol> <p>Note</p> <p>DNS does not care about ports</p>"},{"location":"30_networking/services/#how-does-a-server-know-which-service-to-use","title":"How does a server know which service to use?","text":"<p>How can we have a server, having multiple services running on it, and still be able to connect to the right service?</p> <p>Assumption:</p> <ul> <li>We have a server and want to have 2 Webserver running on it</li> <li>We want to connect to the right Webserver depending on the domain name (<code>domain1.com</code> or <code>domain2.com</code>)</li> </ul> <p>We can use Virtual Hosts to achieve this.</p>"},{"location":"30_networking/services/#virtual-hosts","title":"Virtual Hosts","text":"<ul> <li>We can have multiple virtual hosts on one server</li> <li>Each virtual host has its own domain name</li> <li>Each virtual host has its own document root (folder where the files are stored)</li> </ul> <pre><code>server { # domain1\n    listen       80;\n    server_name  domain1.com;\n\n\n    location / {\n      root   /var/www/html/domain1.com;\n      index  index.html index.htm;\n    }\n  }\n\n  server { # domain2\n    listen       80;\n    server_name  domain2.com;\n\n    location / {\n      root  /var/www/html/domain2.com;\n        index  index.html index.htm;\n    }\n  }\n</code></pre> <p>Here we have 2 virtual hosts, each with its own domain name and document root. Both listen on port 80, but they serve different content depending on the domain name.</p> <pre><code>sequenceDiagram\n    autonumber\n    Browser-&gt;&gt;DNS-Root-Server: What is \"domain1.com\"?\n    DNS-Root-Server-&gt;&gt;DNS-TLD-Server: What is \"domain1.com\"?\n    DNS-TLD-Server-&gt;&gt;DNS-Name-Server: What is \"domain1.com\"?\n    DNS-Name-Server-&gt;&gt;DNS-TLD-Server: It is \"192.168.178.2\"\n    DNS-TLD-Server-&gt;&gt;DNS-Root-Server: It is \"192.168.178.2\"\n    DNS-Root-Server-&gt;&gt;Browser: It is \"192.168.178.2\"\n    Browser-&gt;&gt;Webserver: Hello, 192.168.178.2, a.k.a. \"domain1.com\", I want to connect to you on port 80\n    Webserver-&gt;&gt;Browser: Hello, I am \"domain1.com\". Here is the content of my website.\n</code></pre>"},{"location":"30_networking/services/1_events_sequence/","title":"Sequence of events","text":"<p>How does a client connect to a server?</p> <pre><code>sequenceDiagram\n    participant Client\n    participant DNS\n    participant Server\n\n    Client-&gt;&gt;DNS: DNS request for www.example.com\n    DNS-&gt;&gt;Client: IP address of www.example.com\n    Client-&gt;&gt;Server: HTTP request to www.example.com\n    Server-&gt;&gt;Client: HTTP response</code></pre>"},{"location":"30_networking/services/ca/","title":"Certificate Authority (CA)","text":""},{"location":"30_networking/services/dhcp/","title":"DHCP","text":"<p>https://www.elektronik-kompendium.de/sites/net/0812221.htm</p>"},{"location":"30_networking/services/dns/","title":"DNS","text":"<ul> <li>Resolves domain names to IP addresses</li> <li>Not for port numbers</li> </ul> <p>PRT: Resolves ip addresses to domain names (reverse DNS) =&gt; Used for eg. email (sender verification)</p>"},{"location":"30_networking/services/ldap/","title":"LDAP","text":""},{"location":"30_networking/services/mail/","title":"Mail","text":""},{"location":"30_networking/services/smb/","title":"SMB","text":"<p>SMB is a protocol used for file sharing. It is used by Windows and other operating systems to provide file sharing capabilities.</p>"},{"location":"30_networking/services/smb/#port","title":"Port","text":"<p>SMB uses port <code>445</code>.</p>"},{"location":"30_networking/vpn/","title":"VPN","text":""},{"location":"30_networking/vpn/#what-is-a-vpn","title":"What is a VPN?","text":"<p>A VPN is a Virtual Private Network. It is a way to connect two networks together over the internet. It is used to connect two networks together that are not physically connected. For example, you can use a VPN to connect your home network to your work network.</p>"},{"location":"30_networking/vpn/opnvpn/","title":"OpenVPN","text":"<p>OpenVPN is a VPN protocol that is very popular and widely used.</p>"},{"location":"30_networking/vpn/wireguard/","title":"Wireguard","text":"<p>Wireguard is a modern VPN protocol that is very fast and easy to setup. It is a very good alternative to OpenVPN.</p>"},{"location":"30_networking/wifi/","title":"Wifi","text":"<p>This section will cover some basic Wifi topics like:</p> <ul> <li>Access Points</li> <li>Controllers</li> <li>Mesh Networks</li> </ul>"},{"location":"30_networking/wifi/aps/","title":"APs","text":""},{"location":"30_networking/wifi/controller/","title":"Unify Controller","text":""},{"location":"35_backup/","title":"Backup","text":"<p>You should backup your data, because you never know when you might need it.</p> <p>There are hundreds of ways and software to backup your data, but we will focus on the most common ones.</p>"},{"location":"35_backup/#software","title":"Software","text":"<ul> <li>Restic (CLI)</li> <li>Duplicati (Web UI)</li> <li>Proxmox Backup Server (For Proxmox)</li> <li>Altaro (For Windows)</li> <li>Veeam (For Windows, Linux, etc.)</li> <li>Bareos (Optional)</li> </ul>"},{"location":"35_backup/#self-check","title":"Self Check","text":"<p>Self Check</p> <p>Before you go on, make sure you have completed the following tasks:</p> <ul> <li> Setup PBS for your Proxmox Environment</li> <li> Backup your Windows VM with Altaro</li> <li> Backup your Linux VM with Veeam</li> <li> Backup your own PC with Duplicati or Restic</li> </ul>"},{"location":"35_backup/altaro/","title":"Altaro VM Backup","text":"<p>Altaro is an backup solution especially for Windows. It is easy to use and has a lot of features.</p> <p>Production</p> <p>Altaro is a production-ready software and is used by many companies.</p>"},{"location":"35_backup/bareos/","title":"Bareos","text":"<p>Bareos is an open-source backup solution that supports backing up and restoring VMs, containers, and physical hosts. It is a fork of the Bacula project and is designed to be easy to use and highly scalable. Bareos is a modular system that can be extended with plugins to support additional features and storage backends.</p> <p>https://www.bareos.com/de/</p>"},{"location":"35_backup/duplicati/","title":"Duplicati","text":"<p>Duplicati is a backup software with a Web UI that can backup to many cloud providers, local storage, and network storage.</p> <p>https://docs.duplicati.com/en/latest/01-introduction/</p>"},{"location":"35_backup/pbs/","title":"PBS (Proxmox Backup Server)","text":"<p>The Proxmox Backup Server is a backup solution for backing up and restoring VMs, containers, and physical hosts.</p> <p>https://www.proxmox.com/de/proxmox-backup-server/erste-schritte</p>"},{"location":"35_backup/restic/","title":"Restic","text":"<p>Restic is a backup program for Linux, BSD, Mac, and Windows. It is a CLI tool, but there are also GUIs available.</p> <p>https://restic.net/</p>"},{"location":"35_backup/veeam/","title":"Veeam","text":"<p>Veeam is a software for backup and replication. It is used by many companies and is a production-ready software.</p>"},{"location":"40_security/","title":"IT-Security","text":"<p>Hackthebox and TryHackMe are great places to learn about security. You can create an account and then hack into several machines to learn about security.</p> <p>In order to start a good resource is OWASP Top ten which regularly lists the ten most prominent vulnerabilities in web. Each vulnerability comes with an explanation.</p> <p>Furthermore, linux distributions like Kali Linux or Parrot OS comes with plenty of tools which come in handy when learning and exerting security.</p>","tags":["optional"]},{"location":"50_tools/","title":"Tools","text":"<p>This section gives an overview of some useful tools.</p>","tags":["optional"]},{"location":"50_tools/ansible/","title":"Ansible","text":"<p>https://www.semui.co/</p>"},{"location":"50_tools/monitoring/","title":"Monitoring","text":""},{"location":"50_tools/monitoring/#introduction","title":"Introduction","text":"<p>Monitoring is the process of observing and checking the progress of a system or program during its execution. It is essential to ensure that the system is running smoothly and to identify any issues that may arise. Monitoring can help to identify performance bottlenecks, security vulnerabilities, and other problems that may affect the system's performance.</p>"},{"location":"50_tools/monitoring/#what-can-be-monitored","title":"What can be monitored?","text":"<p>There are many aspects of a system that can be monitored, including:</p> <ul> <li>Performance: Monitoring the performance of the system can help to identify bottlenecks and other issues that may be affecting the system's performance.</li> <li>Security: Monitoring the security of the system can help to identify vulnerabilities and other security issues that may be affecting the system's security.</li> <li>Availability: Monitoring the availability of the system can help to ensure that the system is up and running when it is needed.</li> <li>Capacity: Monitoring the capacity of the system can help to ensure that the system has enough resources to handle the workload.</li> <li>Logs: Monitoring the logs of the system can help to identify issues and errors that may be affecting the system's performance.</li> </ul>"},{"location":"50_tools/monitoring/prometheus/","title":"Prometheus","text":""},{"location":"50_tools/monitoring/uptime/","title":"Uptime Kuma","text":""},{"location":"60_applications/","title":"Applications","text":"<p>This section is for applications related topics.</p>"},{"location":"60_applications/#structure","title":"Structure","text":"<p>The structure of this section is as follows:</p> <ul> <li>Database (Relational, NoSQL)</li> <li>Data Warehouse (Optional)</li> </ul>"},{"location":"60_applications/data_warehouse/","title":"DWT","text":"<p>Data Warehouse Technology is the technology associated with data warehousing. It is a set of concepts and tools that allow the extraction of data from transactional systems, transform it into a format that can be analyzed, and loaded into a data warehouse for analysis.</p>","tags":["optional"]},{"location":"60_applications/data_warehouse/#what-is-a-data-warehouse","title":"What is a Data Warehouse?","text":"<p>A data warehouse is a system that stores data from a company's operational databases as well as external sources. It is a central repository of data in which data from various sources is stored. The data warehouse is then used for reporting and data analysis.</p> <p>For example: <code>Amazon</code> has production databases that store information about customers, orders, products, etc. These are operational databases. Amazon also has a data warehouse that stores data from these operational databases as well as external sources. This data warehouse is then used for reporting and data analysis.</p> <p>Definition</p> <p>A data warehouse is a central repository of data in which data from various sources is stored.</p> <p>Info</p> <p>It is not as fast as an operational database, but it is optimized for reporting and data analysis.</p>","tags":["optional"]},{"location":"60_applications/data_warehouse/apple_health/","title":"DWT with Apple Health","text":"<p>You can use the DWT to analyze your Apple Health data.</p>"},{"location":"60_applications/data_warehouse/own_dwh/","title":"Own Data Warehouse (Open Source)","text":""},{"location":"60_applications/data_warehouse/own_dwh/#software","title":"Software","text":"<ul> <li> <p>Database:</p> <ul> <li>PostgreSQL</li> </ul> </li> <li> <p>Extract &amp; Load (EL)</p> <ul> <li>Meltano</li> <li>Airbyte</li> </ul> </li> <li> <p>Transform (T)</p> <ul> <li>dbt</li> </ul> </li> <li> <p>Visualization</p> <ul> <li>Metabase</li> </ul> </li> </ul>"},{"location":"60_applications/data_warehouse/preperation/","title":"Preperation","text":""},{"location":"60_applications/data_warehouse/preperation/#software","title":"Software","text":"<ul> <li>Knime</li> <li>Power BI</li> <li>Alternative: Metabase</li> <li>RStudio</li> </ul>"},{"location":"60_applications/data_warehouse/preperation/#power-bi","title":"Power BI","text":"<p>Hierarchical Clustering</p>"},{"location":"60_applications/data_warehouse/preperation/#first-steps","title":"First Steps","text":"<p>Download the schema and data. Then import them into your database.</p> <p>Now you can view the data in your database with Power BI.</p>"},{"location":"60_applications/data_warehouse/titanic/","title":"Titanic Kaggle Competition","text":""},{"location":"60_applications/data_warehouse/titanic/#getting-started","title":"Getting started","text":"<p>First, follow the tutorial to get familiar with the data.</p>"},{"location":"60_applications/data_warehouse/titanic/#knime-workflow","title":"Knime Workflow","text":"<p>Now you can download the additional data. These 2 excel sheets contain some additional information about the passengers.</p> <p>You can create an Knime Workflow, which concatenates the data with the (train.csv) data from the tutorial.</p>"},{"location":"60_applications/data_warehouse/titanic/#machine-learning","title":"Machine Learning","text":"<p>You can than also create a random forest with Knime, to predict the survival of the passengers.</p>"},{"location":"60_applications/databases/","title":"Database","text":"<p>This section is for database related topics.</p>"},{"location":"60_applications/databases/#what-is-a-database","title":"What is a database?","text":"<p>A database is a collection of information that is organized so that it can be easily accessed, managed and updated. Data is organized into rows, columns and tables, and it is indexed to make it easier to find relevant information.</p> <p>Goal</p> <p>Goals for this section:</p> <ul> <li>Learn what a database is</li> <li>Setup your first database</li> </ul>"},{"location":"60_applications/databases/#why-do-we-need-databases","title":"Why do we need databases?","text":"<p>Normally, when we create data in a program, it is stored in the memory of the computer. But when the program is closed, the data is lost. To prevent this, we need a database. The database stores the data on the hard drive of the computer, so it is not lost when the program is closed.</p>"},{"location":"60_applications/databases/#why-not-just-use-files","title":"Why not just use files?","text":"<p>You could just use files to store data, but that would be very inefficient. You would have to write a lot of code to read and write the data from the files. You would also have to write a lot of code to search for data in the files. Databases are much more efficient than files.</p> <p>They also structure the data in a way that makes it easier to work with. For example, if you have a database of customers, you can easily find all the customers who live in a certain city, or all the customers who have bought a certain product.</p>"},{"location":"60_applications/databases/orm/","title":"ORM","text":"<p>A object-relational mapping (ORM) is a programming technique for converting data between databases and programming languages. It is a way to convert data from a database into a programming language and vice versa.</p> <p>Goal</p> <p>Goals for this section:</p> <ul> <li>Learn what an ORM is</li> <li>Learn how to use an ORM in Python</li> </ul>"},{"location":"60_applications/databases/nosql/","title":"NoSQL","text":"<p>NoSQL databases in contrast to SQL databases are not relational. They are document based and store data in JSON format. This makes them very flexible and easy to use. They are also very fast and can handle large amounts of data.</p>"},{"location":"60_applications/databases/nosql/#why-nosql","title":"Why NoSQL?","text":"<p>NoSQL databases are very easy to use and are used in many applications. For example, if you want to create a website with some data (without relations), you can use NoSQL to store the data.</p>"},{"location":"60_applications/databases/nosql/cassandra/","title":"Cassandra (advanced)","text":"<p>Cassandra is a NoSQL database that is designed to handle large amounts of data across many commodity servers, providing high availability with no single point of failure. Cassandra offers robust support for clusters spanning multiple datacenters, with asynchronous masterless replication allowing low latency operations for all clients.</p> <p>So you can say it is the big brother of MongoDB, but it is more advanced and used in the industry. It is also a document based database, but it is more flexible and faster.</p>"},{"location":"60_applications/databases/nosql/mongodb/","title":"MongoDB","text":"<p>Is a document-oriented database, which means that instead of storing data in tables made out of individual rows, it stores data in collections made out of individual documents. Documents are analogous to JSON objects but exist in the database in a more type-rich format known as BSON. MongoDB is a distributed database at its core, so high availability, horizontal scaling, and geographic distribution are built in and easy to use.</p>"},{"location":"60_applications/databases/nosql/playground/","title":"Playground","text":"<p>Setup a playground for MongoDB with Docker.</p> <p><code>docker-compose.yml</code>:</p> <pre><code>version: '3.1'\n\nservices:\n  mongo:\n    image: mongo\n    restart: always\n\n  mongo-express:\n    image: mongo-express\n    restart: always\n    ports:\n      - 8081:8081\n    environment:\n      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017/\n      ME_CONFIG_BASICAUTH: false\n</code></pre> <pre><code>docker-compose up -d\n</code></pre> <p>Open http://localhost:8081 in your browser.</p> <p>Danger</p> <p>Do not edit the <code>admin</code>, <code>config</code> and <code>local</code> databases. They are used by MongoDB.</p> <p>Create a new database for your own data.</p>"},{"location":"60_applications/databases/sql/","title":"SQL","text":"<p>SQl is a database language used to create, read, update and delete data from a database.</p> <p>SQL = Structured Query Language</p>"},{"location":"60_applications/databases/sql/#why-sql","title":"Why SQL?","text":"<p>SQL is a very important language, because it is used in many applications. For example, if you want to create a website with users (with relations), you can use SQL to store the users in a database.</p> <p>With SQL you can create relations in your database. This means, that you can connect data from different tables. For example, you can create a table with <code>users</code> and a table with <code>posts</code>. Now you can connect the <code>posts</code> to the <code>users</code> with a relation. This allows you to create a post and connect it to a user.</p>"},{"location":"60_applications/databases/sql/mariadb/","title":"MariaDB","text":"<p>MariaDB is a sql database server.</p>"},{"location":"60_applications/databases/sql/playground/","title":"Playground","text":"<p>Best UI for Database: DBeaver</p>"},{"location":"60_applications/databases/sql/playground/#create-your-first-database","title":"Create your first database","text":""},{"location":"60_applications/databases/sql/playground/#setup-the-database","title":"Setup the Database","text":"<p>You can create an easy database when using the <code>H2 Embedded</code> database.</p> <ol> <li>Install DBeaver</li> <li>Create a new connection</li> <li>Choose <code>H2 Embedded</code></li> <li>Click <code>create</code> and choose a location for your database</li> <li>Click <code>finish</code></li> </ol>"},{"location":"60_applications/databases/sql/playground/#create-the-tables","title":"Create the tables","text":"<p>Download the create-files and execute them in DBeaver (You can execute them by opening a new SQL Editor and copy the content of the file into the editor and execute it).</p>"},{"location":"60_applications/databases/sql/playground/#insert-data","title":"Insert data","text":"<p>Download the insert-files and execute them in DBeaver.</p>"},{"location":"60_applications/databases/sql/playground/#sql","title":"SQL","text":""},{"location":"60_applications/databases/sql/playground/#basics","title":"Basics","text":"<ol> <li>Serie mit \"a\" im Namen</li> </ol> <pre><code>select * from serie s where s.serienname like '%a%';\n</code></pre> <ol> <li>Sender, welche ein Fernsehprogramm haben</li> </ol> <pre><code>select distinct se.sendername from sender se inner join ausstrahlung a on a.sender_pk = se.sender_pk;\n</code></pre> <ol> <li>Sender, mit Fernsehprogramm nach 17:30</li> </ol> <pre><code>select se.sendername from sender se inner join ausstrahlung a on a.sender_pk = se.sender_pk where CAST(a.startzeit as time) &gt; '17:30:00' and CAST(a.startzeit as time) &gt; '17:30:00';\n</code></pre> <ol> <li>Serie bei denen Aaron Paul mitspielt</li> </ol> <pre><code>select s.serienname from serie s\ninner join seriehauptschauspielerxref s2 on s2.serie_fk = s.serie_pk\ninner join kunstler k on k.kuenstler_pk = s2.kuenstler_fk\nwhere k.vorname = 'Aaron' and k.nachname = 'Paul';\n</code></pre> <ol> <li>Summer der Vertr\u00e4ge von Peter Feldmann</li> </ol> <pre><code>select sum(v.monatspreis) from vertrag v inner join kunde k on k.email = v.email_fk where k.vorname = 'Peter' and k.nachname = 'Feldmann';\n</code></pre> <p>6 staffeln nach avg rating</p> <pre><code>select s.serienname, e.staffel, avg(e.imdb_rating)\n from serie s inner join episode e on e.serie_pk = s.serie_pk group by e.staffel, s.serienname  order by avg(e.imdb_rating) desc;\n</code></pre> <ol> <li>Serien, die aktuell nicht im TV ausgestrahlt werden</li> </ol> <pre><code>select s.serienname from serie s where s.serienname not in (select distinct s.serienname from serie s inner join ausstrahlung a on a.serie_pk = s.serie_pk);\n</code></pre> <ol> <li>Stoffentwickler = K\u00fcnstler</li> </ol> <pre><code>select * from serie s inner join seriehauptschauspielerxref s2 ON s.kuenstler_fk = s2.kuenstler_fk;\n</code></pre> <ol> <li>Schauspieler mit mehreren Serien</li> </ol> <pre><code>select k.vorname, k.nachname, count(s2.serie_fk) from kunstler k inner join seriehauptschauspielerxref s2 on s2.kuenstler_fk = k.kuenstler_pk group by k.vorname, k.nachname having count(s2.serie_fk) &gt; 1;\n</code></pre> <ol> <li>Rating diff pro Episode in Staffel</li> </ol> <pre><code>select s.serienname, e.staffel, e.episode_pk, (e.imdb_rating - e2.imdb_rating) as rating_diff from episode e inner join episode e2 on e2.episode_pk  = e.episode_pk - 1 and e2.staffel = e.staffel and e2.serie_pk = e.serie_pk inner join serie s on s.serie_pk = e.serie_pk order by s.serienname, e.staffel, e.episode_pk;\n</code></pre>"},{"location":"60_applications/databases/sql/playground/#referential-integrity","title":"Referential Integrity","text":"<p>A referential integrity constraint is a rule that maintains the defined relationship between two tables when records are inserted, updated, or deleted in the database.</p>"},{"location":"60_applications/databases/sql/playground/#1-add-a-broadcast-of-s3e1-for-the-series-lupin-on-zdf","title":"1. Add a broadcast of S3E1 for the series \"Lupin\" on ZDF","text":"<p><code>Serie Luping = 3, ZDF = 2, Staffel 3, Episode 1</code></p> <pre><code>insert into ausstrahlung\n(serie_pk, episode_pk, Staffel, sender_pk, Ausstahlungsnummer, Startzeit, Endzeit) values\n(3, 1, 3, 2, 7, '2020-01-01 20:15:00', '2020-01-01 21:15:00');\n</code></pre> <p>Error:</p> <pre><code>ERROR: insert or update on table \"ausstrahlung\" violates foreign key constraint \"fk_ausstrah_associati_episode\"\nDetail: Key (serie_pk, episode_pk, staffel)=(3, 1, 3) is not present in table \"episode\".\n</code></pre> <p>Explanation: There is no episode 1 in season 3 of Lupin</p> <p></p>"},{"location":"60_applications/databases/sql/playground/#2-change-the-creator-of-the-orville-to-the-person-number-99","title":"2. Change the creator of \"The Orville\" to the person number 99.","text":"<pre><code>update serie set kuenstler_fk = 99 where serie_pk = 2;\n</code></pre> <p>Error:</p> <pre><code>ERROR: insert or update on table \"serie\" violates foreign key constraint \"fk_serie_associati_kunstler\"\nDetail: Key (kuenstler_fk)=(99) is not present in table \"kunstler\".\n</code></pre> <p>Explanation: There is no artist with the ID 99</p> <p></p>"},{"location":"60_applications/databases/sql/playground/#3-delete-the-series-breaking-bad","title":"3. Delete the series \"Breaking Bad\"","text":"<pre><code>delete from serie where serie_pk = 1;\n</code></pre> <p>Error:</p> <pre><code>ERROR: update or delete on table \"serie\" violates foreign key constraint \"fk_episode_associati_serie\" on table \"episode\"\nDetail: Key (serie_pk)=(1) is still referenced from table \"episode\".\n</code></pre> <p>Explanation: There are still episodes of Breaking Bad that reference the series</p>"},{"location":"60_applications/databases/sql/playground/#constraints","title":"Constraints","text":"<p>You can also download the constraint-files and execute them in DBeaver.</p>"},{"location":"60_applications/databases/sql/playground/#prepare","title":"Prepare","text":"<pre><code>-- 1. F\u00fcgen Sie der Tabelle Vertrageinen CHECKConstraint hinzu, so dass Abopreise niemals kleiner werden k\u00f6nnen als 10\u20ac. Verwenden Sie hierf\u00fcr eine ALTER TABLE Anweisung\nalter table STREAMING.vertrag add constraint check_monatspreis check (monatspreis &gt;= 10);\n-- 2. F\u00fcgen Sie einen Constraint hinzu, der verbietet, dass negative Ratings f\u00fcr Episoden eingetragen werden. Benennen Sie den Constraint mit \u201ekeine_negativen_rating\u201c\nalter table STREAMING.episode add constraint keine_negativen_rating check (imdb_rating &gt;= 0);\n-- 3. F\u00fcgen Sie weiterhin einen DEFAULT-Wert von 8 f\u00fcr die Ratings hinzu. Verwenden Sie hierf\u00fcr jeweils ALTER TABLE Anweisungen.\nalter table STREAMING.episode alter column imdb_rating set default 8;\n</code></pre>"},{"location":"60_applications/databases/sql/playground/#check","title":"Check","text":"<pre><code>-- Should fail\ninsert into STREAMING.Vertrag\n    (streamingdienst_fk, email_fk, Monatspreis, Vertragslaufzeit) values\n    (4, 'peter.feldmann@awo.de', 9, '2024-01-01');\n-- Should fail\ninsert into STREAMING.episode\n    (serie_pk, episode_pk, staffel, titel, IMDB_Rating) values\n    (1, 17, 5, 'Live Free or Die', -1);\n\n-- Should work\ninsert into STREAMING.episode\n    (serie_pk, episode_pk, staffel, titel) values\n    (1, 17, 5, 'Live Free or Die');\nselect * from STREAMING.episode where serie_pk = 1 and episode_pk = 17;\n</code></pre>"},{"location":"60_applications/databases/sql/playground/#functions","title":"Functions","text":"<p>Warning</p> <p>Attention: Only works with PostgreSQL!!!</p> <pre><code>-- Function to check if a slot is free\n-- Returns a boolean\ncreate or replace function isFreeSlot(pSender_pk integer, pStartzeit timestamp, pEndzeit timestamp) returns boolean as $$\ndeclare\n    vCount integer;\nbegin\n    select count(*) into vCount from STREAMING.Ausstrahlung where sender_pk = pSender_pk and (Startzeit, Endzeit) overlaps (pStartzeit, pEndzeit);\n    return vCount = 0;\nend;\n$$ language plpgsql;\n\n-- Trigger function to check if a slot is free\ncreate or replace function checkFreeSlot() returns trigger as $$\nbegin\n    if not isFreeSlot(new.sender_pk, new.Startzeit, new.Endzeit) then\n        raise exception 'Slot is not free';\n    end if;\n    return new;\nend;\n$$ language plpgsql;\n\n-- Trigger to check if a slot is free\ncreate or replace trigger checkFreeSlot before insert on STREAMING.ausstrahlung for each row execute procedure checkFreeSlot();\n\n-- Test the function\nselect isFreeSlot(5, '2023-05-01 15:29:00', '2023-05-01 15:30:00');\nselect isFreeSlot(5, '2023-05-01 15:30:00', '2023-05-01 15:31:00');\nselect isFreeSlot(5, '2023-05-01 18:30:00', '2023-05-01 18:31:00');\n\n-- Test the trigger\n--- Should Fail\ninsert into STREAMING.Ausstrahlung (serie_pk, episode_pk, Staffel, sender_pk, Ausstahlungsnummer, Startzeit, Endzeit) values (3, 1, 1, 5, 1, '2023-05-01 15:30', '2023-05-01 16:30');\ninsert into STREAMING.Ausstrahlung (serie_pk, episode_pk, Staffel, sender_pk, Ausstahlungsnummer, Startzeit, Endzeit) values (3, 2, 1, 5, 2, '2023-05-01 16:30', '2023-05-01 17:30');\ninsert into STREAMING.Ausstrahlung (serie_pk, episode_pk, Staffel, sender_pk, Ausstahlungsnummer, Startzeit, Endzeit) values (3, 2, 1, 5, 3, '2023-05-01 17:30', '2023-05-01 18:30');\n\ninsert into STREAMING.Ausstrahlung (serie_pk, episode_pk, Staffel, sender_pk, Ausstahlungsnummer, Startzeit, Endzeit) values (2, 1, 1, 4, 4, '2023-05-01 16:00', '2023-05-01 17:00');\ninsert into STREAMING.Ausstrahlung (serie_pk, episode_pk, Staffel, sender_pk, Ausstahlungsnummer, Startzeit, Endzeit) values (2, 2, 1, 4, 5, '2023-05-01 17:00', '2023-05-01 18:00');\ninsert into STREAMING.Ausstrahlung (serie_pk, episode_pk, Staffel, sender_pk, Ausstahlungsnummer, Startzeit, Endzeit) values (2, 3, 1, 4, 6, '2023-05-01 18:00', '2023-05-01 19:00');\n-- Should success\ninsert into STREAMING.Ausstrahlung (serie_pk, episode_pk, Staffel, sender_pk, Ausstahlungsnummer, Startzeit, Endzeit) values  (2, 1, 1, 4, 7, '2023-05-01 19:00', '2023-05-01 20:00');\ninsert into STREAMING.Ausstrahlung (serie_pk, episode_pk, Staffel, sender_pk, Ausstahlungsnummer, Startzeit, Endzeit) values  (2, 2, 1, 4, 8, '2023-05-01 20:00', '2023-05-01 21:00');\ninsert into STREAMING.Ausstrahlung (serie_pk, episode_pk, Staffel, sender_pk, Ausstahlungsnummer, Startzeit, Endzeit) values  (2, 3, 1, 4, 9, '2023-05-01 21:00', '2023-05-01 22:00');\n</code></pre>"},{"location":"60_applications/databases/sql/playground/#dependencies","title":"Dependencies","text":"<pre><code>graph LR\nEpisode --&gt; Serie\nStreamingAngebotXref --&gt; Serie\nSerieHauptschauspielerXref --&gt; Serie</code></pre>"},{"location":"60_applications/databases/sql/postgres/","title":"Postgres","text":"<p>Postgres is the big brother of mariadb. It is a more advanced database system, which is used in the industry.</p>"},{"location":"70_coding/","title":"Coding","text":"<p>This section is for coding related topics.</p>","tags":["optional"]},{"location":"70_coding/10_ide/","title":"IDEs","text":"<p>There are multiple IDEs available for each language. Some are better than others, but it is mostly a matter of preference. You can use any IDE you want, but we recommend the following:</p> <ul> <li>Visual Studio Code</li> <li>JetBrains IDEs</li> </ul>"},{"location":"70_coding/10_ide/jetbrains/","title":"JetBrains","text":"<p>JetBrains is a company that makes IDEs for many languages. They are all very good and have a lot of features. They are also very customizable.</p> <p>Each IDE has a free community edition and a paid ultimate edition. The community edition is enough for most people.</p>"},{"location":"70_coding/10_ide/jetbrains/#list-of-ides","title":"List of IDEs","text":"IDE Languages Website IntelliJ IDEA Java, Kotlin, Groovy, Scala, JavaScript, TypeScript, SQL, HTML, CSS, PHP, Python, Ruby, Go, Rust, Dart JetBrains IntelliJ IDEA PyCharm Python JetBrains PyCharm WebStorm JavaScript, TypeScript, HTML, CSS JetBrains WebStorm CLion C, C++ JetBrains CLion"},{"location":"70_coding/10_ide/vscode/","title":"VSCode","text":"<p>VSCode is not an IDE, but a text editor. It is a very powerful text editor, and can be used as an IDE with the help of extensions.</p>"},{"location":"70_coding/10_ide/vscode/#installation","title":"Installation","text":"<p>To install VSCode, follow the instructions on the official website: VSCode installation</p>"},{"location":"70_coding/20_web/","title":"Web Development","text":""},{"location":"70_coding/20_web/jekyll/","title":"Jekyll","text":"<p>With Jekyll you can create your own website, based on Templates from other people. You can find a list of templates here. I use the Serial Programmer Theme.</p>"},{"location":"70_coding/20_web/basics/","title":"Web Basics","text":""},{"location":"70_coding/20_web/basics/1_html/","title":"HTML","text":"<p>HTML is a markup language. It is used to create websites. It is the most basic language for web development.</p> <p>Note</p> <p>It is not a programming language.</p>"},{"location":"70_coding/20_web/basics/2_css/","title":"CSS","text":"<p>CSS is a language used to style HTML elements. It is used to make websites look good.</p> <p>Note</p> <p>It is not a programming language.</p>"},{"location":"70_coding/20_web/basics/3_php/","title":"PHP","text":"<p>PHP is a server-side scripting language. It is used to make dynamic web pages. It is very popular and is used by many websites (but it's old).s</p>"},{"location":"70_coding/20_web/basics/4_js/","title":"JavaScript","text":"<p>JavaScript is a programming language that is used to make websites interactive. It's a programming language that runs in the browser.</p>"},{"location":"70_coding/20_web/frameworks/","title":"Web Frameworks","text":""},{"location":"70_coding/20_web/frameworks/react/","title":"React/NextJS","text":"<p>Warning</p> <p>Don't confuse React (Web UI framework) with React Native (Cross-platform mobile UI framework).</p> <ul> <li>React Native is a separate framework, which is not based on React, but uses the same principles.</li> <li>React Native is just for mobile, while React is for web.</li> </ul>"},{"location":"70_coding/30_desktop/","title":"Desktop Development","text":""},{"location":"70_coding/30_desktop/cpp/","title":"C/C++","text":""},{"location":"70_coding/30_desktop/java/","title":"Java","text":"<p>Desktop deployment with Java</p>"},{"location":"70_coding/30_desktop/python/","title":"Python","text":""},{"location":"70_coding/40_apps/","title":"App Development","text":""},{"location":"70_coding/40_apps/android/","title":"Android","text":""},{"location":"70_coding/40_apps/android/#android-studio","title":"Android Studio","text":""},{"location":"70_coding/40_apps/android/#with-java","title":"With Java","text":""},{"location":"70_coding/40_apps/android/#with-kotlin","title":"With Kotlin","text":""},{"location":"70_coding/40_apps/ios/","title":"iOS","text":""},{"location":"70_coding/40_apps/ios/#xcode","title":"Xcode","text":""},{"location":"70_coding/40_apps/ios/#swift","title":"Swift","text":""},{"location":"70_coding/40_apps/cross_plattform/","title":"Cross-Plattform Apps","text":""},{"location":"70_coding/40_apps/cross_plattform/flutter/","title":"Flutter","text":""},{"location":"70_coding/40_apps/cross_plattform/flutter/#installation","title":"Installation","text":"<p>To install Flutter, follow the instructions on the official website: Flutter installation</p>"},{"location":"70_coding/40_apps/cross_plattform/flutter/#introdution","title":"Introdution","text":"<p>Learning Flutter is a good starting point to learn Flutter. It's a small project with all important features to create a Flutter app with proper architecture. Its made by Ute Trapp, a professor at HDA offering the HCI course.</p>"},{"location":"70_coding/40_apps/cross_plattform/react_native/","title":"React Native","text":"<p>Warning</p> <p>Don't confuse React (Web UI framework) with React Native (Cross-platform mobile UI framework).</p> <ul> <li>React Native is a separate framework, which is not based on React, but uses the same principles.</li> <li>React Native is just for mobile, while React is for web.</li> </ul>"},{"location":"70_coding/50_games/","title":"Game Development","text":""},{"location":"70_coding/50_games/unity/","title":"Unity","text":""},{"location":"70_coding/50_games/unreal_engine/","title":"UnrealEngine","text":""},{"location":"70_coding/60_challenges/","title":"Challenges","text":"<p>There are many differet websites, where you can find coding challenges. The most popular is LeetCode. Here you can find a lot of different problems, which you can solve in different programming languages.</p>"},{"location":"70_coding/70_tools/","title":"Tools","text":"<p>These are the tools that are useful for development in coding projects.</p>"},{"location":"70_coding/70_tools/CICD/","title":"CI/CD","text":""},{"location":"70_coding/70_tools/sonarqube/","title":"SonarQube","text":""},{"location":"80_ai/","title":"Introduction","text":"","tags":["optional"]},{"location":"80_ai/#what-is-machine-learning","title":"What is Machine Learning?","text":"<p>Machine Learning is a subfield of Artificial Intelligence. It is about creating algorithms that can learn from data. The goal is to create algorithms that can make predictions based on the data.</p>","tags":["optional"]},{"location":"80_ai/#getting-started","title":"Getting started","text":"<p>To get started with Machine Learning, you should complete (more or less) the google course. I would recommend to complete at least till the Classification: Thresholding section.</p>","tags":["optional"]},{"location":"80_ai/#llm","title":"LLM","text":"<p>https://github.com/mlabonne/llm-course</p>","tags":["optional"]},{"location":"80_ai/genetic_algorithms/","title":"Genetic Algorithms","text":"<p>Get started with genetic algorithms by following this tutorial.</p>"},{"location":"80_ai/genetic_algorithms/protein_folding/","title":"Protein Folding","text":"<p>GA-Folding is a personal project, based on the genetic algortihm course of the HDA. The goal is to create a genetic algorithm that can fold a protein.</p>"},{"location":"80_ai/machine_learning/","title":"Machine Learning","text":""},{"location":"80_ai/machine_learning/pothole_detection/","title":"Pothole Detection","text":"<p>https://www.skyface.de/Trainees-FiSi/</p>"},{"location":"90_project/","title":"Project","text":"<p>This is a project, which should include all skills and knowledge you have learned in this course.</p>"},{"location":"tags/","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"tags/#cli","title":"CLI","text":"<ul> <li>Network Tools</li> </ul>"},{"location":"tags/#tools","title":"Tools","text":"<ul> <li>Network Tools</li> </ul>"},{"location":"tags/#optional","title":"optional","text":"<ul> <li>IT-Security</li> <li>Tools</li> <li>Home</li> <li>Coding</li> <li>Introduction</li> </ul>"}]}